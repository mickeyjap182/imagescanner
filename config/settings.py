"""
Django settings for imagescanner project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from django.conf import global_settings


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'xmewo_2ilgbl&l2&a+ii=ejq2k#so@f8g7)oixm*!b&d%1nv#w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'common.apps.CommonConfig',  # pollsアプリの設定
    # 'common.models.apps.ModelsConfig',  # commonアプリの設定
    'common.templatetags.common_tags',  # カスタムタグの指定 py
    'bootstrap4',  # django-bootstrap4 pip install django-bootstrap4
    'search', # searchアプリ
    'polls',  # pollsアプリ
    'apis',  # apisアプリ
    # 'debug_toolbar',  # debug

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 読み込むルーティングファイル先
ROOT_URLCONF = 'imagescanner.urls'

# 認証モジュール
# AUTH_USER_MODEL='common.models.users.AdminUser'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # '/Users/toyamayoshitaka/Documents/sample/python/django/imagescanner/docs',
            os.path.join(BASE_DIR, 'docs'),

        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# webサーバ連携モジュール
WSGI_APPLICATION = 'config.wsgi.application'

# 最上位ルーティング設定
ROOT_URLCONF = 'config.urls'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases


"""
   TO MYSQL SETTINGS.
   CREATE DATABASE images_scanner CHARACTER SET utf8mb4;
   CREATE USER appuser@'%' IDENTIFIED BY 'apppass';
   GRANT ALL ON images_scanner.* TO appuser@'%' IDENTIFIED BY 'apppass';

   pip uninstall mysql-connector-python # if you have installed.
   pip install mysqlclient # when use mysql, runserver shoud be warning about this. 
   
   
"""
DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'images_scanner',
        'USER': 'appuser',
        'PASSWORD': 'apppass',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

# 言語ロケール
#LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'Ja'

# タイムゾーン設定
#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

# STATIC_URL = os.path.dirname(os.path.abspath(__file__)) + '/docs/'
STATIC_ROOT = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'static')
STATIC_URL = '/static/'

# ロギングの設定
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.abspath(__file__) + '/../../log/debug.log',
        },
    },
    'loggers': {
        'default': {
            'handlers': ['file'],  # ログ出力操作
            'level': 'DEBUG',      # ログ出力レベル
            'propagate': True,
        },
    },
}

# 静的ファイル置き場
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'docs'), # 共通の置き場
    ("common", os.path.join(BASE_DIR, 'docs')),
]

"""
静的定義
"""
